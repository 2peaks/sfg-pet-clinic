<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>sfg-pet-clinic</artifactId>
        <groupId>guru.springframework</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>pet-clinic-data</artifactId>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <properties>
        <!-- Avoid creating fat jar -->
        <spring-boot.repackage.skip>true</spring-boot.repackage.skip>
    </properties>

<!-- On IntelliJ, If you get error "language level is invalid or missing in pom.xml. current project jdk is 1.8. specify language level"
 1. https://mkyong.com/intellij/how-to-change-the-intellij-idea-jdk-version/
 2. If #1 doesn't work. Update  pet-clinic-data.iml and pet-clinic-web.iml
 from:
 <orderEntry type="jdk" jdkName="1.8" jdkType="JavaSDK" />
 to:
 <orderEntry type="jdk" jdkName="11" jdkType="JavaSDK" />
 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>

                <!-- By default Spring boot tries to create fat jar(executable) for pet-clinic-data which we don't want.
                We want just the jar with classes in pet-clinic-data.
                So, add this <executions>
                On new Spring boot, you also need to add <spring-boot.repackage.skip>true</spring-boot.repackage.skip> in <properties>
                -->
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
<!--                        <configuration>-->
<!--                            <skip>true</skip>-->
<!--                        </configuration>-->
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>